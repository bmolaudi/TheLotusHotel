{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mpho\\\\Desktop\\\\AOD\\\\Informatics Project\\\\lotus.zip (1)\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from \"redux-firestore\";\nimport { reactReduxFirebase, ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebaseConfig from \"./config/firebaseConfig\";\nimport firebase from \"firebase/app\"; //for render on auth ready\n\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase'; //applymiddleware returns a store enhancer\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirestore,\n  getFirebase\n})), reduxFirestore(firebase, firebaseConfig) // reactReduxFirebase(firebaseConfig, {useFirestoreForProfile:true, userProfile: 'users', attachAuthIsReady:true})\n));\nconst profileSpecificProps = {\n  userProfile: 'user',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n};\nconst rrfProps = {\n  firebase,\n  // config: firebaseConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({\n  children\n}) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 55\n    }\n  }, \"Loading..\"));\n  return children;\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(AuthIsLoaded, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }\n}))))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/Mpho/Desktop/AOD/Informatics Project/lotus.zip (1)/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","reduxFirestore","getFirestore","createFirestoreInstance","reactReduxFirebase","ReactReduxFirebaseProvider","getFirebase","firebaseConfig","firebase","useSelector","isLoaded","store","withExtraArgument","profileSpecificProps","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","rrfProps","config","dispatch","AuthIsLoaded","children","auth","state","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,uBAHF,QAKO,iBALP;AAMA,SAASC,kBAAT,EAA6BC,0BAA7B,EAAyDC,WAAzD,QAA4E,sBAA5E;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,QAAP,MAAqB,cAArB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CAEA;;AACA,MAAMC,KAAK,GAAGhB,WAAW,CACvBG,WADuB,EAEvBD,OAAO,CACLD,eAAe,CAACI,KAAK,CAACY,iBAAN,CAAwB;AAAEV,EAAAA,YAAF;AAAgBI,EAAAA;AAAhB,CAAxB,CAAD,CADV,EAELL,cAAc,CAACO,QAAD,EAAWD,cAAX,CAFT,CAGL;AAHK,CAFgB,CAAzB;AASA,MAAMM,oBAAoB,GAAG;AAC3BC,EAAAA,WAAW,EAAE,MADc;AAE3BC,EAAAA,sBAAsB,EAAE,IAFG;AAG3BC,EAAAA,sBAAsB,EAAE,KAHG;AAI3BC,EAAAA,gBAAgB,EAAE;AAJS,CAA7B;AAQA,MAAMC,QAAQ,GAAG;AACfV,EAAAA,QADe;AAEf;AACAW,EAAAA,MAAM,EAAEN,oBAHO;AAIfO,EAAAA,QAAQ,EAAET,KAAK,CAACS,QAJD;AAKfjB,EAAAA;AALe,CAAjB;;AAQA,SAASkB,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAClC,QAAMC,IAAI,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAAChB,QAAN,CAAee,IAAzB,CAAxB;AACA,MAAI,CAACb,QAAQ,CAACa,IAAD,CAAb,EAAqB,oBAAO;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAxB,CAAP;AACrB,SAAOD,QAAP;AACD;;AAED9B,QAAQ,CAACiC,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEd,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,0BAAD,oBAAgCO,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADF,CADF,CADF,CADF,EAUEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF,E,CAaA;AACA;AACA;;AACAjC,aAAa,CAACkC,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance,\n\n} from \"redux-firestore\";\nimport { reactReduxFirebase, ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebaseConfig from \"./config/firebaseConfig\";\nimport firebase from \"firebase/app\";\n\n//for render on auth ready\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\n//applymiddleware returns a store enhancer\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, firebaseConfig),\n    // reactReduxFirebase(firebaseConfig, {useFirestoreForProfile:true, userProfile: 'users', attachAuthIsReady:true})\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: 'user',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n};\n\n\nconst rrfProps = {\n  firebase,\n  // config: firebaseConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return <div className=\"center\"><p>Loading..</p></div>;\n  return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <React.StrictMode>\n        <App />\n      </React.StrictMode>\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}