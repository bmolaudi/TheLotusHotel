{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mpho\\\\Desktop\\\\AOD\\\\Informatics Project\\\\lotus.zip (1)\\\\src\\\\components\\\\admin\\\\report\\\\UsersOverview.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\nimport RangeDatePicker from \"./RangeDatePicker\";\nimport Chart from \"./chart\";\nimport { firestore } from '../../../config/firebaseConfig';\n\nclass UsersOverview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      var counter = 0;\n      console.log(counter);\n      const createdAt = new Date().getDate();\n      const booking = await firestore.collection(\"/counters\").doc(`${createdAt}`).get();\n\n      if (booking.data()) {\n        counter = booking.data().counter;\n        console.log(counter);\n      } else {\n        counter = 0;\n      }\n\n      const chartOptions = { ...{\n          responsive: true,\n          legend: {\n            position: \"top\"\n          },\n          elements: {\n            line: {\n              // A higher value makes the line look skewed at this ratio.\n              tension: 0.3\n            },\n            point: {\n              radius: 0\n            }\n          },\n          scales: {\n            xAxes: [{\n              gridLines: false,\n              ticks: {\n                callback(tick, index) {\n                  // Jump every 7 values on the X axis labels to avoid clutter.\n                  return index % 7 !== 0 ? \"\" : tick;\n                }\n\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                suggestedMax: 45,\n\n                callback(tick) {\n                  if (tick === 0) {\n                    return tick;\n                  } // Format the amounts using Ks for thousands.\n\n\n                  return tick > 999 ? `${(tick / 1000).toFixed(1)}K` : tick;\n                }\n\n              }\n            }]\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: false\n          },\n          tooltips: {\n            custom: false,\n            mode: \"nearest\",\n            intersect: false\n          }\n        },\n        ...this.props.chartOptions\n      };\n      const BlogUsersOverview = new Chart(this.canvasRef.current, {\n        type: \"LineWithLine\",\n        data: {\n          labels: Array.from(new Array(30), (_, i) => i === 0 ? 1 : i),\n          datasets: [{\n            label: \"Current Month\",\n            fill: \"start\",\n            data: [0, 0, 3, 4, 2, 4, 3, 5, 6, 10, 2, 11, 7, 0, 6, 15, 5, 6, 2, 5, 6, 1, 0, 26, 1, 10, 0, counter],\n            backgroundColor: \"rgba(0,123,255,0.1)\",\n            borderColor: \"rgba(0,123,255,1)\",\n            pointBackgroundColor: \"#ffffff\",\n            pointHoverBackgroundColor: \"rgb(0,123,255)\",\n            borderWidth: 1.5,\n            pointRadius: 0,\n            pointHoverRadius: 3\n          }, {\n            label: \"Past Month\",\n            fill: \"start\",\n            data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            backgroundColor: \"rgba(255,65,105,0.1)\",\n            borderColor: \"rgba(255,65,105,1)\",\n            pointBackgroundColor: \"#ffffff\",\n            pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\n            borderDash: [3, 3],\n            borderWidth: 1,\n            pointRadius: 0,\n            pointHoverRadius: 2,\n            pointBorderColor: \"rgba(255,65,105,1)\"\n          }]\n        },\n        options: chartOptions\n      }); // They can still be triggered on hover.\n\n      const buoMeta = BlogUsersOverview.getDatasetMeta(0);\n      buoMeta.data[0]._model.radius = 0;\n      buoMeta.data[this.props.chartData.datasets[0].data.length - 1]._model.radius = 0; // Render the chart.\n\n      BlogUsersOverview.render();\n    };\n\n    this.canvasRef = React.createRef();\n  }\n\n  render() {\n    const {\n      title\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Card, {\n      small: true,\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: \"border-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, title)), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"pt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      height: \"120\",\n      ref: this.canvasRef,\n      style: {\n        maxWidth: \"100% !important\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nUsersOverview.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The chart dataset.\n   */\n  chartData: PropTypes.object,\n\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object\n};\nUsersOverview.defaultProps = {\n  title: \"Website visits\",\n  chartData: {\n    labels: Array.from(new Array(30), (_, i) => i === 0 ? 1 : i),\n    datasets: [{\n      label: \"Current Month\",\n      fill: \"start\",\n      data: [5, 0, 3, 4, 2, 4, 3, 5, 6, 10, 2, 11, 7, 0, 6, 15, 5, 6, 2, 5, 6, 1, 0, 26, 1, 10, 0, 6],\n      backgroundColor: \"rgba(0,123,255,0.1)\",\n      borderColor: \"rgba(0,123,255,1)\",\n      pointBackgroundColor: \"#ffffff\",\n      pointHoverBackgroundColor: \"rgb(0,123,255)\",\n      borderWidth: 1.5,\n      pointRadius: 0,\n      pointHoverRadius: 3\n    }, {\n      label: \"Past Month\",\n      fill: \"start\",\n      data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      backgroundColor: \"rgba(255,65,105,0.1)\",\n      borderColor: \"rgba(255,65,105,1)\",\n      pointBackgroundColor: \"#ffffff\",\n      pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\n      borderDash: [3, 3],\n      borderWidth: 1,\n      pointRadius: 0,\n      pointHoverRadius: 2,\n      pointBorderColor: \"rgba(255,65,105,1)\"\n    }]\n  }\n};\nexport default UsersOverview;","map":{"version":3,"sources":["C:/Users/Mpho/Desktop/AOD/Informatics Project/lotus.zip (1)/src/components/admin/report/UsersOverview.js"],"names":["React","PropTypes","Row","Col","Card","CardHeader","CardBody","Button","RangeDatePicker","Chart","firestore","UsersOverview","Component","constructor","props","componentDidMount","counter","console","log","createdAt","Date","getDate","booking","collection","doc","get","data","chartOptions","responsive","legend","position","elements","line","tension","point","radius","scales","xAxes","gridLines","ticks","callback","tick","index","yAxes","suggestedMax","toFixed","hover","mode","intersect","tooltips","custom","BlogUsersOverview","canvasRef","current","type","labels","Array","from","_","i","datasets","label","fill","backgroundColor","borderColor","pointBackgroundColor","pointHoverBackgroundColor","borderWidth","pointRadius","pointHoverRadius","borderDash","pointBorderColor","options","buoMeta","getDatasetMeta","_model","chartData","length","render","createRef","title","maxWidth","propTypes","string","object","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\n\nimport RangeDatePicker from \"./RangeDatePicker\";\nimport Chart from \"./chart\";\nimport {firestore} from '../../../config/firebaseConfig'\n\nclass UsersOverview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = async () => {\n\n    var counter = 0;\n    console.log(counter);\n    const createdAt = new Date().getDate();\n    const booking = await firestore.collection(\"/counters\").doc(`${createdAt}`).get();\n    if (booking.data()){\n    \n \n    counter = booking.data().counter;\n    console.log(counter);\n   \n    }\n    else{\n      counter = 0;\n    }\n    const chartOptions = {\n      ...{\n        responsive: true,\n        legend: {\n          position: \"top\"\n        },\n        elements: {\n          line: {\n            // A higher value makes the line look skewed at this ratio.\n            tension: 0.3\n          },\n          point: {\n            radius: 0\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                callback(tick, index) {\n                  // Jump every 7 values on the X axis labels to avoid clutter.\n                  return index % 7 !== 0 ? \"\" : tick;\n                }\n              }\n            }\n          ],\n          yAxes: [\n            {\n              ticks: {\n                suggestedMax: 45,\n                callback(tick) {\n                  if (tick === 0) {\n                    return tick;\n                  }\n                  // Format the amounts using Ks for thousands.\n                  return tick > 999 ? `${(tick / 1000).toFixed(1)}K` : tick;\n                }\n              }\n            }\n          ]\n        },\n        hover: {\n          mode: \"nearest\",\n          intersect: false\n        },\n        tooltips: {\n          custom: false,\n          mode: \"nearest\",\n          intersect: false\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const BlogUsersOverview = new Chart(this.canvasRef.current, {\n      type: \"LineWithLine\",\n      data:  {\n        labels: Array.from(new Array(30), (_, i) => (i === 0 ? 1 : i)),\n        datasets: [\n          {\n            label: \"Current Month\",\n            fill: \"start\",\n            data: [\n              0,\n              0,\n              3,\n              4,\n              2,\n              4,\n              3,\n              5,\n              6,\n              10,\n              2,\n              11,\n              7,\n              0,\n              6,\n              15,\n              5,\n              6,\n              2,\n              5,\n              6,\n              1,\n              0,\n              26,\n              1,\n              10,\n              0,\n              counter,\n            ],\n            backgroundColor: \"rgba(0,123,255,0.1)\",\n            borderColor: \"rgba(0,123,255,1)\",\n            pointBackgroundColor: \"#ffffff\",\n            pointHoverBackgroundColor: \"rgb(0,123,255)\",\n            borderWidth: 1.5,\n            pointRadius: 0,\n            pointHoverRadius: 3\n          },\n          {\n            label: \"Past Month\",\n            fill: \"start\",\n            data: [\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0,\n              0\n            ],\n            backgroundColor: \"rgba(255,65,105,0.1)\",\n            borderColor: \"rgba(255,65,105,1)\",\n            pointBackgroundColor: \"#ffffff\",\n            pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\n            borderDash: [3, 3],\n            borderWidth: 1,\n            pointRadius: 0,\n            pointHoverRadius: 2,\n            pointBorderColor: \"rgba(255,65,105,1)\"\n          }\n        ]\n      },\n      options: chartOptions\n    });\n\n    // They can still be triggered on hover.\n    const buoMeta = BlogUsersOverview.getDatasetMeta(0);\n    buoMeta.data[0]._model.radius = 0;\n    buoMeta.data[\n      this.props.chartData.datasets[0].data.length - 1\n    ]._model.radius = 0;\n\n    // Render the chart.\n    BlogUsersOverview.render();\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n        </CardHeader>\n        <CardBody className=\"pt-0\">\n          {/* <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"d-flex mb-2 mb-sm-0\">\n              <RangeDatePicker />\n            </Col>\n            \n          </Row> */}\n          <canvas\n            height=\"120\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nUsersOverview.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart dataset.\n   */\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object\n};\n\nUsersOverview.defaultProps = {\n  title: \"Website visits\",\n  chartData: {\n    labels: Array.from(new Array(30), (_, i) => (i === 0 ? 1 : i)),\n    datasets: [\n      {\n        label: \"Current Month\",\n        fill: \"start\",\n        data: [\n          5,\n          0,\n          3,\n          4,\n          2,\n          4,\n          3,\n          5,\n          6,\n          10,\n          2,\n          11,\n          7,\n          0,\n          6,\n          15,\n          5,\n          6,\n          2,\n          5,\n          6,\n          1,\n          0,\n          26,\n          1,\n          10,\n          0,\n          6,\n        ],\n        backgroundColor: \"rgba(0,123,255,0.1)\",\n        borderColor: \"rgba(0,123,255,1)\",\n        pointBackgroundColor: \"#ffffff\",\n        pointHoverBackgroundColor: \"rgb(0,123,255)\",\n        borderWidth: 1.5,\n        pointRadius: 0,\n        pointHoverRadius: 3\n      },\n      {\n        label: \"Past Month\",\n        fill: \"start\",\n        data: [\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0\n        ],\n        backgroundColor: \"rgba(255,65,105,0.1)\",\n        borderColor: \"rgba(255,65,105,1)\",\n        pointBackgroundColor: \"#ffffff\",\n        pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\n        borderDash: [3, 3],\n        borderWidth: 1,\n        pointRadius: 0,\n        pointHoverRadius: 2,\n        pointBorderColor: \"rgba(255,65,105,1)\"\n      }\n    ]\n  }\n};\n\nexport default UsersOverview;\n"]},"metadata":{},"sourceType":"module"}