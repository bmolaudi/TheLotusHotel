{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mpho\\\\Desktop\\\\AOD\\\\Informatics Project\\\\lotus.zip (1)\\\\src\\\\components\\\\admin\\\\report\\\\report.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\nimport PageTitle from \"./PageTitle\";\nimport SmallStats from \"./SmallStats\";\nimport UsersOverview from \"./UsersOverview\";\nimport UsersByDevice from \"./UsersByDevice\";\nimport { getRoomsNumber, getOccupiedRooms, getUserNumber } from \"../../../config/firebaseConfig\";\n\nconst Reports = ({\n  smallStats\n}) => {\n  const [roomNumber, setRoomNumber] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const [bookedRooms, setbookedRooms] = useState(\"\");\n  useEffect(() => {\n    async function fetchProduct() {\n      setRoomNumber(await getRoomsNumber());\n      setbookedRooms(await getOccupiedRooms());\n      setUsers(await getUserNumber());\n    }\n\n    fetchProduct();\n  }, []);\n  console.log(roomNumber);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    title: \"Report\",\n    subtitle: \"Dashboard\",\n    className: \"text-sm-left mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, smallStats[0].value = roomNumber, smallStats[1].value = parseInt(roomNumber) + parseInt(bookedRooms), smallStats[2].value = bookedRooms, smallStats[3].value = users, smallStats.map((stats, idx) => /*#__PURE__*/React.createElement(Col, Object.assign({\n    className: \"col-lg mb-4\",\n    key: idx\n  }, stats.attrs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SmallStats, {\n    id: `small-stats-${idx}`,\n    variation: \"1\",\n    chartData: stats.datasets,\n    chartLabels: stats.chartLabels,\n    label: stats.label,\n    value: stats.value,\n    percentage: stats.percentage,\n    increase: stats.increase,\n    decrease: stats.decrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UsersOverview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"6\",\n    sm: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UsersByDevice, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }))));\n};\n\nReports.propTypes = {\n  /**\r\n   * The small stats dataset.\r\n   */\n  smallStats: PropTypes.array\n};\nReports.defaultProps = {\n  smallStats: [{\n    label: \"Total Number of Rooms\",\n    value: \"2,390\",\n    attrs: {\n      md: \"6\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n      borderColor: \"rgb(0, 184, 216)\",\n      data: [1, 1, 1, 1, 1, 1, 1]\n    }]\n  }, {\n    label: \"Free Rooms (today)\",\n    value: \"182\",\n    attrs: {\n      md: \"6\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(23,198,113,0.1)\",\n      borderColor: \"rgb(23,198,113)\",\n      data: [1, 1, 1, 1, 1, 1, 1]\n    }]\n  }, {\n    label: \"Occupatied Rooms (today)\",\n    value: \"8,147\",\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: [1, 1, 1, 1, 1, 1, 1]\n    }]\n  }, {\n    label: \"Users\",\n    value: \"29\",\n    percentage: \"2.71%\",\n    increase: true,\n    decrease: false,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(23,198,113,0.1)\",\n      borderColor: \"rgb(23,198,113)\",\n      data: [1, 2, 3, 5, 7, 8, 9]\n    }]\n  }]\n};\nexport default Reports;","map":{"version":3,"sources":["C:/Users/Mpho/Desktop/AOD/Informatics Project/lotus.zip (1)/src/components/admin/report/report.js"],"names":["React","useState","useEffect","PropTypes","Container","Row","Col","PageTitle","SmallStats","UsersOverview","UsersByDevice","getRoomsNumber","getOccupiedRooms","getUserNumber","Reports","smallStats","roomNumber","setRoomNumber","users","setUsers","bookedRooms","setbookedRooms","fetchProduct","console","log","value","parseInt","map","stats","idx","attrs","datasets","chartLabels","label","percentage","increase","decrease","propTypes","array","defaultProps","md","sm","fill","borderWidth","backgroundColor","borderColor","data"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Row, Col } from \"shards-react\";\r\n\r\nimport PageTitle from \"./PageTitle\";\r\nimport SmallStats from \"./SmallStats\";\r\nimport UsersOverview from \"./UsersOverview\";\r\nimport UsersByDevice from \"./UsersByDevice\";\r\nimport {getRoomsNumber, getOccupiedRooms, getUserNumber} from \"../../../config/firebaseConfig\"\r\n\r\nconst Reports = ({ smallStats }) => {\r\n    const [roomNumber, setRoomNumber] = useState(\"\");\r\n    const [users, setUsers] = useState(\"\");\r\n    const [bookedRooms, setbookedRooms] = useState(\"\");\r\n    \r\n    \r\n    useEffect(() => {\r\n        async function fetchProduct() {\r\n            setRoomNumber(await getRoomsNumber());\r\n            setbookedRooms(await getOccupiedRooms());\r\n            setUsers(await getUserNumber());\r\n    \r\n        }\r\n    \r\n        fetchProduct();\r\n    }, []);\r\n    console.log(roomNumber)\r\n    \r\nreturn(\r\n  <Container fluid className=\"main-content-container px-4\">\r\n    {/* Page Header */}\r\n    <Row noGutters className=\"page-header py-4\">\r\n      <PageTitle title=\"Report\" subtitle=\"Dashboard\" className=\"text-sm-left mb-3\" />\r\n    </Row>\r\n\r\n    {/* Small Stats Blocks */}\r\n    <Row>\r\n        {smallStats[0].value = roomNumber}\r\n        {smallStats[1].value = parseInt(roomNumber)+ parseInt(bookedRooms)}\r\n        {smallStats[2].value = bookedRooms}\r\n        {smallStats[3].value = users}\r\n      {smallStats.map((stats, idx) => (\r\n        <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\r\n          <SmallStats\r\n            id={`small-stats-${idx}`}\r\n            variation=\"1\"\r\n            chartData={stats.datasets}\r\n            chartLabels={stats.chartLabels}\r\n            label={stats.label}\r\n            value={stats.value}\r\n            percentage={stats.percentage}\r\n            increase={stats.increase}\r\n            decrease={stats.decrease}\r\n          />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n\r\n    <Row>\r\n      {/* Users Overview */}\r\n      <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n        <UsersOverview />\r\n      </Col>\r\n\r\n      {/* Users by Device */}\r\n      <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\r\n        <UsersByDevice />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n)};\r\n\r\nReports.propTypes = {\r\n  /**\r\n   * The small stats dataset.\r\n   */\r\n  smallStats: PropTypes.array\r\n};\r\n\r\nReports.defaultProps = {\r\n  smallStats: [\r\n    {\r\n      label: \"Total Number of Rooms\",\r\n      value: \"2,390\",\r\n      attrs: { md: \"6\", sm: \"6\" },\r\n      datasets: [\r\n        {\r\n          label: \"Today\",\r\n          fill: \"start\",\r\n          borderWidth: 1.5,\r\n          backgroundColor: \"rgba(0, 184, 216, 0.1)\",\r\n          borderColor: \"rgb(0, 184, 216)\",\r\n          data: [1, 1, 1, 1, 1, 1, 1]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Free Rooms (today)\",\r\n      value: \"182\",\r\n      attrs: { md: \"6\", sm: \"6\" },\r\n      datasets: [\r\n        {\r\n          label: \"Today\",\r\n          fill: \"start\",\r\n          borderWidth: 1.5,\r\n          backgroundColor: \"rgba(23,198,113,0.1)\",\r\n          borderColor: \"rgb(23,198,113)\",\r\n          data: [1, 1, 1, 1, 1, 1, 1]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Occupatied Rooms (today)\",\r\n      value: \"8,147\",\r\n      attrs: { md: \"4\", sm: \"6\" },\r\n      datasets: [\r\n        {\r\n          label: \"Today\",\r\n          fill: \"start\",\r\n          borderWidth: 1.5,\r\n          backgroundColor: \"rgba(255,180,0,0.1)\",\r\n          borderColor: \"rgb(255,180,0)\",\r\n          data: [1, 1, 1, 1, 1, 1, 1]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Users\",\r\n      value: \"29\",\r\n      percentage: \"2.71%\",\r\n      increase: true,\r\n      decrease: false,\r\n      chartLabels: [null, null, null, null, null, null, null],\r\n      attrs: { md: \"4\", sm: \"6\" },\r\n      datasets: [\r\n        {\r\n          label: \"Today\",\r\n          fill: \"start\",\r\n          borderWidth: 1.5,\r\n          backgroundColor: \"rgba(23,198,113,0.1)\",\r\n          borderColor: \"rgb(23,198,113)\",\r\n          data: [1, 2, 3, 5, 7, 8, 9]\r\n        }\r\n      ]\r\n    },\r\n  ]\r\n};\r\n\r\nexport default Reports;\r\n"]},"metadata":{},"sourceType":"module"}