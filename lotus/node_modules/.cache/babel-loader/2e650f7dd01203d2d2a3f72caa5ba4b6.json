{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\"; // Your web app's Firebase configuration\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyBcBrE9kL8wJ9oujWz02rMVH49j5EuP4No\",\n//   authDomain: \"hotellotus-4e039.firebaseapp.com\",\n//   databaseURL: \"https://hotellotus-4e039.firebaseio.com\",\n//   projectId: \"hotellotus-4e039\",\n//   storageBucket: \"hotellotus-4e039.appspot.com\",\n//   messagingSenderId: \"953193570376\",\n//   appId: \"1:953193570376:web:819594ad15ae3cb434387d\",\n// };\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBbDeHWzNHRadQ-cOd3AGJHSVCd2frRwc8\",\n  authDomain: \"lotushotel-3d458.firebaseapp.com\",\n  databaseURL: \"https://lotushotel-3d458.firebaseio.com\",\n  projectId: \"lotushotel-3d458\",\n  storageBucket: \"lotushotel-3d458.appspot.com\",\n  messagingSenderId: \"538186330795\",\n  appId: \"1:538186330795:web:26931286a1acb66094bdee\",\n  measurementId: \"G-LCQCBH0P7D\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\nexport default firebase;\nexport async function counter() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  const createdAt = new Date().getDate();\n  var counter = 0;\n  console.log(counter);\n  const booking = await firestore.collection(\"/counters\").doc(`${createdAt}`).get();\n\n  if (booking.data()) {\n    counter = booking.data().counter;\n    console.log(counter);\n  } else {\n    counter = 0;\n  }\n\n  firestore.collection(\"/counters\").doc(`${createdAt}`).set({\n    counter: 1 + counter\n  });\n}\nexport async function getCouneter(id) {\n  const booking = await firestore.collection(\"/counters\").doc(`${id}`).get();\n\n  if (booking.data()) {\n    return booking.data();\n  } else {\n    return 0;\n  }\n}\nexport async function updateBooking(id, Customer, Status, checkIn, checkOut, numberOfGuests, roomNumber, AdditionalInformation) {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  if (!Customer) return;\n  console.log(Customer);\n  const createdAt = new Date();\n  firestore.collection(\"/bookings\").doc(`${id}`).set({\n    Customer,\n    Status,\n    checkIn,\n    checkOut,\n    numberOfGuests,\n    roomNumber,\n    AdditionalInformation\n  }).then(function () {\n    console.log(\"Document successfully editted!\");\n  }).catch(function (error) {\n    console.error(\"Error writing document: \", error);\n  });\n}\nexport async function addBooking(Customer, Status, checkIn, checkOut, numberOfGuests, roomNumber, AdditionalInformation) {\n  require(\"firebase/firestore\");\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n    console.log(\"problem Resolved\");\n  }\n\n  if (!Customer) return;\n  const createdAt = new Date();\n  const uid = createdAt.toISOString();\n  console.log(uid);\n  console.log(Customer);\n  firestore.collection(\"/bookings\").doc(`${uid}`).set({\n    Customer,\n    Status,\n    checkIn,\n    checkOut,\n    numberOfGuests,\n    roomNumber,\n    AdditionalInformation\n  }).then(function () {\n    console.log(\"Document successfully written!\");\n  }).catch(function (error) {\n    console.error(\"Error writing document: \", error);\n  });\n}\nexport async function deleteBooking(uid) {\n  if (!uid) return;\n  firestore.collection(\"/bookings\").doc(`${uid}`).delete().then(function () {\n    console.log(\"Document successfully deleted!\");\n  }).catch(function (error) {\n    console.error(\"Error removing document: \", error);\n  });\n}\nexport async function getBookingDetails() {\n  try {\n    const snapshot = await firestore.collection('/bookings').get();\n    console.log(snapshot);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport async function getRooms() {\n  try {\n    const snapshot = await firestore.collection('/rooms').get();\n    console.log(snapshot);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport async function getRoomsNumber() {\n  try {\n    const snapshot = await firestore.collection('/rooms').get();\n    console.log(snapshot.size);\n    return snapshot.size;\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport async function getUserNumber() {\n  try {\n    const snapshot = await firestore.collection('/user').get();\n    console.log(snapshot.size);\n    return snapshot.size;\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport async function getOccupiedRooms() {\n  const booking = await firestore.collection(\"bookings\").where(\"Status\", \"==\", \"CheckIn\").get();\n\n  if (booking) {\n    console.log(booking.size);\n    return booking.size;\n  } else {\n    return null;\n  }\n}\nexport async function getBooking(email) {\n  console.log(email);\n  const booking = await firestore.collection(\"bookings\").where(\"Customer\", \"==\", email).limit(1).get();\n\n  if (booking) {\n    console.log(booking);\n    return {\n      id: booking.docs[0].id,\n      ...booking.docs[0].data()\n    };\n  } else {\n    return null;\n  }\n}\nexport async function getUserType(email) {\n  console.log(email);\n  const user = await firestore.collection(\"user\").where(\"email\", \"==\", email).limit(1).get();\n\n  if (user) {\n    var data = user.docs[0].data();\n    var userType = data.userType;\n    console.log(userType);\n\n    if (userType) {\n      return userType;\n    } else return \"guest\";\n  }\n}","map":{"version":3,"sources":["C:/Users/Mpho/Desktop/AOD/Informatics Project/lotus.zip (1)/src/config/firebaseConfig.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","storage","counter","apps","length","createdAt","Date","getDate","console","log","booking","collection","doc","get","data","set","getCouneter","id","updateBooking","Customer","Status","checkIn","checkOut","numberOfGuests","roomNumber","AdditionalInformation","then","catch","error","addBooking","require","uid","toISOString","deleteBooking","delete","getBookingDetails","snapshot","docs","map","e","getRooms","getRoomsNumber","size","getUserNumber","getOccupiedRooms","where","getBooking","email","limit","getUserType","user","userType"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\n// var firebaseConfig = {\r\n//   apiKey: \"AIzaSyBcBrE9kL8wJ9oujWz02rMVH49j5EuP4No\",\r\n//   authDomain: \"hotellotus-4e039.firebaseapp.com\",\r\n//   databaseURL: \"https://hotellotus-4e039.firebaseio.com\",\r\n//   projectId: \"hotellotus-4e039\",\r\n//   storageBucket: \"hotellotus-4e039.appspot.com\",\r\n//   messagingSenderId: \"953193570376\",\r\n//   appId: \"1:953193570376:web:819594ad15ae3cb434387d\",\r\n// };\r\n\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBbDeHWzNHRadQ-cOd3AGJHSVCd2frRwc8\",\r\n  authDomain: \"lotushotel-3d458.firebaseapp.com\",\r\n  databaseURL: \"https://lotushotel-3d458.firebaseio.com\",\r\n  projectId: \"lotushotel-3d458\",\r\n  storageBucket: \"lotushotel-3d458.appspot.com\",\r\n  messagingSenderId: \"538186330795\",\r\n  appId: \"1:538186330795:web:26931286a1acb66094bdee\",\r\n  measurementId: \"G-LCQCBH0P7D\"\r\n}\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nexport default firebase;\r\n\r\nexport async function counter ()  {\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n  const createdAt = new Date().getDate();\r\n  var counter = 0;\r\n  console.log(counter);\r\n\r\n  const booking = await firestore.collection(\"/counters\").doc(`${createdAt}`).get();\r\n  if (booking.data()){\r\n    \r\n \r\n    counter = booking.data().counter;\r\n    console.log(counter);\r\n   \r\n }\r\n  else{\r\n    counter = 0;\r\n  }\r\n\r\n  firestore.collection(\"/counters\").doc(`${createdAt}`).set({\r\n    counter: 1 + counter\r\n  })\r\n}\r\n\r\nexport async function getCouneter(id) {\r\n  \r\n  const booking = await firestore.collection(\"/counters\").doc(`${id}`).get();\r\n  if (booking.data()){\r\n    \r\n return (\r\n  booking.data()\r\n   );\r\n }\r\n  else{\r\n      return 0;\r\n  }\r\n  \r\n}\r\n\r\n  export async function updateBooking ( id, Customer, Status, checkIn, checkOut, numberOfGuests,roomNumber,AdditionalInformation)  {\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n  if (!Customer) return;\r\n  console.log(Customer);\r\n  const createdAt = new Date();\r\n  firestore.collection(\"/bookings\").doc(`${id}`).set({\r\n    Customer,\r\n    Status,\r\n    checkIn,\r\n    checkOut,\r\n    numberOfGuests,\r\n    roomNumber,\r\n    AdditionalInformation\r\n  })\r\n  .then(function() {\r\n      console.log(\"Document successfully editted!\");\r\n  })\r\n  .catch(function(error) {\r\n      console.error(\"Error writing document: \", error);\r\n  })\r\n}\r\n\r\n  export async function addBooking (Customer, Status, checkIn, checkOut, numberOfGuests,roomNumber,AdditionalInformation)  {\r\n  require(\"firebase/firestore\");\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n    console.log(\"problem Resolved\");\r\n}\r\n  if (!Customer) return;\r\n  const createdAt = new Date();\r\n  \r\n  const uid = createdAt.toISOString();\r\n  console.log(uid);\r\n  console.log(Customer);\r\n  firestore.collection(\"/bookings\").doc(`${uid}`).set({\r\n      Customer,\r\n      Status,\r\n      checkIn,\r\n      checkOut,\r\n      numberOfGuests,\r\n      roomNumber,\r\n      AdditionalInformation\r\n  })\r\n  .then(function() {\r\n      console.log(\"Document successfully written!\");\r\n  })\r\n  .catch(function(error) {\r\n      console.error(\"Error writing document: \", error);\r\n  })\r\n}\r\n\r\nexport async function deleteBooking (uid) {\r\n  if (!uid) return;\r\n  firestore.collection(\"/bookings\").doc(`${uid}`).delete().then(function() {\r\n      console.log(\"Document successfully deleted!\");\r\n  }).catch(function(error) {\r\n      console.error(\"Error removing document: \", error);\r\n  });\r\n}\r\n\r\nexport async function getBookingDetails() {\r\n  try {\r\n      const snapshot = await firestore.collection('/bookings')\r\n      .get();\r\n      console.log(snapshot)\r\n      return snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()}));\r\n  }\r\n  catch (e) {\r\n      console.log(e);\r\n\r\n  }\r\n\r\n}\r\n\r\nexport async function getRooms() {\r\n  try {\r\n      const snapshot = await firestore.collection('/rooms')\r\n      .get();\r\n      console.log(snapshot)\r\n      return snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()}));\r\n  }\r\n  catch (e) {\r\n      console.log(e);\r\n\r\n  }\r\n\r\n}\r\n\r\nexport async function getRoomsNumber() {\r\n  try {\r\n      const snapshot = await firestore.collection('/rooms')\r\n      .get();\r\n      console.log(snapshot.size)\r\n      return snapshot.size;\r\n  }\r\n  catch (e) {\r\n      console.log(e);\r\n\r\n  }\r\n}\r\n\r\n\r\nexport async function getUserNumber() {\r\n  try {\r\n      const snapshot = await firestore.collection('/user')\r\n      .get();\r\n      console.log(snapshot.size)\r\n      return snapshot.size;\r\n  }\r\n  catch (e) {\r\n      console.log(e);\r\n\r\n  }\r\n}\r\n\r\nexport async function getOccupiedRooms() {\r\n  const booking = await firestore.collection(\"bookings\").where(\"Status\", \"==\",\"CheckIn\").get();\r\n  if (booking){\r\n    console.log(booking.size);\r\n return (booking.size);\r\n  }\r\n  else{\r\n      return null;\r\n  }\r\n  \r\n}\r\n\r\nexport async function getBooking(email) {\r\n  console.log(email);\r\n  const booking = await firestore.collection(\"bookings\").where(\"Customer\", \"==\",email).limit(1).get();\r\n  if (booking){\r\n    console.log(booking);\r\n return ({\r\n   id: booking.docs[0].id,\r\n   ...booking.docs[0].data()});\r\n  }\r\n  else{\r\n      return null;\r\n  }\r\n  \r\n}\r\n\r\nexport async function getUserType(email) {\r\n  console.log(email);\r\n  const user = await firestore.collection(\"user\").where(\"email\", \"==\",email).limit(1).get();\r\n  if (user){\r\n    var data = user.docs[0].data();\r\n    var userType = data.userType;\r\n    console.log(userType)\r\n    if (userType){\r\n      return userType;\r\n    }\r\n    else \r\n      return \"guest\";\r\n  \r\n}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}