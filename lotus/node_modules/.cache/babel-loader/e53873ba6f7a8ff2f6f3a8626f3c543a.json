{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const dateSlice = createSlice({\n  name: 'date',\n  initialState: {\n    startDate: null,\n    endDate: null\n  },\n  reducers: {\n    setStartDateR: (state, action) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.startDate = action.payload.startDate;\n    },\n    setEndDateR: (state, action) => {\n      state.endDate = action.payload.endDate;\n    }\n  }\n});\nexport const {\n  setStartDateR,\n  setEndDateR\n} = dateSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectStartDate = state => state;\nexport default dateSlice.reducer;","map":{"version":3,"sources":["C:/Users/Mpho/Desktop/AOD/Informatics Project/lotus.zip (1)/src/store/reducers/dateSlice.js"],"names":["createSlice","dateSlice","name","initialState","startDate","endDate","reducers","setStartDateR","state","action","payload","setEndDateR","actions","selectStartDate","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,MAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE,IADC;AAEZC,IAAAA,OAAO,EAAE;AAFG,GAFqB;AAMnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC;AACA;AACA;AACA;AACAD,MAAAA,KAAK,CAACJ,SAAN,GAAkBK,MAAM,CAACC,OAAP,CAAeN,SAAjC;AACD,KAPO;AAQRO,IAAAA,WAAW,EAAG,CAACH,KAAD,EAAQC,MAAR,KAAoB;AAChCD,MAAAA,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACC,OAAP,CAAeL,OAA/B;AACD;AAVO;AANyB,CAAD,CAA7B;AAoBP,OAAO,MAAM;AAAEE,EAAAA,aAAF;AAAiBI,EAAAA;AAAjB,IAAgCV,SAAS,CAACW,OAAhD,C,CAGP;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAGL,KAAK,IAAIA,KAAjC;AAEP,eAAeP,SAAS,CAACa,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const dateSlice = createSlice({\r\n  name: 'date',\r\n  initialState: {\r\n    startDate: null,\r\n    endDate: null\r\n  },\r\n  reducers: {\r\n    setStartDateR: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.startDate = action.payload.startDate;\r\n    },\r\n    setEndDateR:  (state, action) =>  {\r\n      state.endDate = action.payload.endDate;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setStartDateR, setEndDateR} = dateSlice.actions;\r\n\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectStartDate = state => state;\r\n\r\nexport default dateSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}